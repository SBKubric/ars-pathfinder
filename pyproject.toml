[project]
name = "ars-pathfinder"
version = "0.0.1"
requires-python = ">=3.11"

[tool.poetry]
name = "ars-pathfinder"
authors = ["Stanislav aka sbkubric Bogatskiy"]
version = "0.0.1"
readme = 'README.md'
description = "A sample asyncio server for remote robot control via gRPC"
repository = 'https://github.com/sbkubric/ars-pathfinder'
packages = [
  { include = "src" },
]

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
numpy = "^1.26.3"
grpclib = "^0.4.7"
pydantic-numpy = "^4.1.3"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
orjson = "^3.9.12"
async-cache = "^1.1.1"
redis = "^5.0.1"

[tool.poetry.group.local]
optional = true

[tool.poetry.group.local.dependencies]
flake8 = "*"
flake8-isort = "*"
black = "*"
pre-commit = "*"
pytest = "*"
pytest-mock = "*"
pytest-cov = "*"
pytest-asyncio = "*"
pytest-sugar = "*"
fakeredis = "*"
mypy = "*"
pyright = "*"
grpcio = "^1.60.0"
grpcio-tools = "^1.60.0"
types-protobuf = "^4.24.0.20240106"
watchfiles = "^0.21.0"
mypy-protobuf = "^3.5.0"
grpc-stubs = "^1.53.0.5"
types-redis = "^4.6.0.20240106"

[tool.poetry.group.production]
optional = true

[tool.poetry.group.production.dependencies]
sentry-sdk = "^1.10.1"

[tool.black]
target-version = ['py311']
skip-string-normalization = true
skip-magic-trailing-comma = true

[tool.pyright]
venv = '.venv'
venvPath = '.'
useLibraryCodeForTypes = true


[tool.pytest.ini_options]
asyncio_mode = 'strict'
markers = [
    "asyncio",
]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
